name: Security

on:
  schedule:
    # Run security checks weekly
    - cron: '0 2 * * 1'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install dependencies
      run: poetry install --with dev

    - name: Run Bandit security linter
      run: |
        poetry run pip install bandit
        poetry run bandit -r chatops_cli/ -f json -o bandit-report.json

    - name: Run Safety check for known vulnerabilities
      run: |
        poetry run pip install safety
        poetry run safety check --json --output safety-report.json

    - name: Run Semgrep security scan
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/owasp-top-ten

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'json'
        output: 'trivy-report.json'

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports-${{ github.run_number }}
        path: |
          bandit-report.json
          safety-report.json
          semgrep-report.json
          trivy-report.json

    - name: Comment PR with security findings
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          let comment = '## 🔒 Security Scan Results\n\n';
          
          // Check if reports exist and add findings
          if (fs.existsSync('bandit-report.json')) {
            const banditReport = JSON.parse(fs.readFileSync('bandit-report.json', 'utf8'));
            if (banditReport.results && banditReport.results.length > 0) {
              comment += '### ⚠️ Bandit Security Issues\n';
              banditReport.results.forEach(issue => {
                comment += `- **${issue.issue_severity}**: ${issue.issue_text} (${issue.filename}:${issue.line_number})\n`;
              });
              comment += '\n';
            }
          }
          
          if (fs.existsSync('safety-report.json')) {
            const safetyReport = JSON.parse(fs.readFileSync('safety-report.json', 'utf8'));
            if (safetyReport.vulnerabilities && safetyReport.vulnerabilities.length > 0) {
              comment += '### ⚠️ Safety Vulnerabilities\n';
              safetyReport.vulnerabilities.forEach(vuln => {
                comment += `- **${vuln.severity}**: ${vuln.package} ${vuln.installed_version} - ${vuln.description}\n`;
              });
              comment += '\n';
            }
          }
          
          if (comment === '## 🔒 Security Scan Results\n\n') {
            comment += '✅ No security issues found!\n';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Dependency Review
      uses: actions/dependency-review-action@v3
      with:
        fail-on-severity: moderate 